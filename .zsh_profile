VIM="nvim"
export GIT_EDITOR=$VIM

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export XDG_CONFIG_HOME=$HOME/.config
export GOPATH=$HOME/go
export PYTHONBREAKPOINT="ipdb.set_trace"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export BAT_THEME="TwoDark"
export FZF_DEFAULT_OPTS="--extended --height 40% --layout=reverse-list --border"
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS' --color fg:#ebdbb2,bg:#282828,hl:#fabd2f,fg+:#ebdbb2,bg+:#3c3836,hl+:#fabd2f --color info:#83a598,prompt:#bdae93,spinner:#fabd2f,pointer:#83a598,marker:#fe8019,header:#665c54'


source "/home/zejr/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
source "/home/zejr/.oh-my-zsh/custom/plugins/zsh-vim-mode/zsh-vim-mode.plugin.zsh"
source "/home/zejr/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "/home/zejr/.oh-my-zsh/custom/plugins/fzf-zsh"
source "/usr/share/nvm/init-nvm.sh"

fpath=( "$fpath[@]" "$HOME/.config/znt/zsh-navigation-tools" )
setopt AUTO_PUSHD HIST_IGNORE_DUPS PUSHD_IGNORE_DUPS
zstyle ':completion::complete:n-kill::bits' matcher 'r:|=** l:|=*'
zle -N znt-history-widget

autoload n-aliases n-cd n-env n-functions n-history n-kill n-list n-list-draw n-list-input n-options n-panelize n-help
autoload znt-usetty-wrapper znt-history-widget znt-cd-widget znt-kill-widget

bindkey '^R' znt-history-widget
bindkey -s '^n' 'fzf_nvim \n' 
bindkey -s '^f' 'cd $(fd . "/home/zejr" --type directory | fzf )\n'


alias naliases=n-aliases ncd=n-cd nenv=n-env nfunctions=n-functions nhistory=n-history
alias nkill=n-kill noptions=n-options npanelize=n-panelize nhelp=n-help
alias ls="ls --color"
alias gph="git push origin"
# alias gpl="git fetch && git pull origin"
alias joplin="~/.joplin-bin/bin/joplin"
alias ol="GIT_SSH_COMMAND='ssh -i /home/zejr/.ssh/id_rsa_olist'"
alias yarn="/usr/local/lib/node_modules/yarn/bin/yarn"
alias pg_start="sudo service postgresql start && sudo update-rc.d postgresql enable"
alias poetry="~/.poetry/bin/poetry"
alias calc="speedcrunch"
alias vpn="sudo openvpn  --config ~/Documentos/certifications/OlistVPN.ovpn"
alias cat="bat --paging=never"
alias archi="./Downloads/Archi/Archi &"
alias mv="mv -i"
alias globo="sudo sh ~/Downloads/GlobalProtect/global_protect/install.sh"
alias ospt="./Works/OpenSource/spotifyd/target/release/spotifyd && spt"
alias cspt="kill -9 $(pidof spotifyd)"
# alias xclip="xclip -sel clip"
alias xclip='xclip -selection c'
alias senha="cat .passwd | tr -d '\n' | xclip && keepassxc &"

auth(){
    echo "-> 1) stg\n-> 2) prd"
    read OPCAO

    if test "$OPCAO" = 2; then
        olist && echo "$SENHA_GOOGLE_AUTH" | aws-google-auth -q
        echo "conectado a PRODUCAO"
    elif test "$OPCAO" = 1; then
        olist-staging && echo "$SENHA_GOOGLE_AUTH" | aws-google-auth -q
        echo "conectado a PRODUCAO"
    else
        auth
    fi
}

fzf_nvim(){
    nvim $(ag --files-with-matches --hidden --path-to-ignore ~/.ignore -g "" | fzf --preview "bat --color=always --style=numbers {}")
}

gpl(){
    if test "$1" = "olist"; then
        ol git fetch && ol git pull origin $2
    else
        git fetch && git pull origin $1
    fi
}

